
Opdracht C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000762  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000007b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000824  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e84  00000000  00000000  000008bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000995  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005f5  00000000  00000000  000020d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  000026cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e7  00000000  00000000  00002818  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002fd  00000000  00000000  00002cff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002ffc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
   2:	00 00       	nop
   4:	78 c0       	rjmp	.+240    	; 0xf6 <__bad_interrupt>
   6:	00 00       	nop
   8:	76 c0       	rjmp	.+236    	; 0xf6 <__bad_interrupt>
   a:	00 00       	nop
   c:	74 c0       	rjmp	.+232    	; 0xf6 <__bad_interrupt>
   e:	00 00       	nop
  10:	72 c0       	rjmp	.+228    	; 0xf6 <__bad_interrupt>
  12:	00 00       	nop
  14:	70 c0       	rjmp	.+224    	; 0xf6 <__bad_interrupt>
  16:	00 00       	nop
  18:	6e c0       	rjmp	.+220    	; 0xf6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6c c0       	rjmp	.+216    	; 0xf6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6a c0       	rjmp	.+212    	; 0xf6 <__bad_interrupt>
  22:	00 00       	nop
  24:	68 c0       	rjmp	.+208    	; 0xf6 <__bad_interrupt>
  26:	00 00       	nop
  28:	66 c0       	rjmp	.+204    	; 0xf6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	64 c0       	rjmp	.+200    	; 0xf6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	62 c0       	rjmp	.+196    	; 0xf6 <__bad_interrupt>
  32:	00 00       	nop
  34:	60 c0       	rjmp	.+192    	; 0xf6 <__bad_interrupt>
  36:	00 00       	nop
  38:	5e c0       	rjmp	.+188    	; 0xf6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5c c0       	rjmp	.+184    	; 0xf6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5a c0       	rjmp	.+180    	; 0xf6 <__bad_interrupt>
  42:	00 00       	nop
  44:	58 c0       	rjmp	.+176    	; 0xf6 <__bad_interrupt>
  46:	00 00       	nop
  48:	56 c0       	rjmp	.+172    	; 0xf6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	54 c0       	rjmp	.+168    	; 0xf6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	52 c0       	rjmp	.+164    	; 0xf6 <__bad_interrupt>
  52:	00 00       	nop
  54:	50 c0       	rjmp	.+160    	; 0xf6 <__bad_interrupt>
  56:	00 00       	nop
  58:	4e c0       	rjmp	.+156    	; 0xf6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4c c0       	rjmp	.+152    	; 0xf6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4a c0       	rjmp	.+148    	; 0xf6 <__bad_interrupt>
  62:	00 00       	nop
  64:	48 c0       	rjmp	.+144    	; 0xf6 <__bad_interrupt>
  66:	00 00       	nop
  68:	46 c0       	rjmp	.+140    	; 0xf6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	44 c0       	rjmp	.+136    	; 0xf6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	42 c0       	rjmp	.+132    	; 0xf6 <__bad_interrupt>
  72:	00 00       	nop
  74:	40 c0       	rjmp	.+128    	; 0xf6 <__bad_interrupt>
  76:	00 00       	nop
  78:	3e c0       	rjmp	.+124    	; 0xf6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3c c0       	rjmp	.+120    	; 0xf6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3a c0       	rjmp	.+116    	; 0xf6 <__bad_interrupt>
  82:	00 00       	nop
  84:	38 c0       	rjmp	.+112    	; 0xf6 <__bad_interrupt>
  86:	00 00       	nop
  88:	36 c0       	rjmp	.+108    	; 0xf6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	08 00       	.word	0x0008	; ????
  8e:	00 00       	nop
  90:	be 92       	st	-X, r11
  92:	24 49       	sbci	r18, 0x94	; 148
  94:	12 3e       	cpi	r17, 0xE2	; 226
  96:	ab aa       	std	Y+51, r10	; 0x33
  98:	aa 2a       	or	r10, r26
  9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
  9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
  9e:	4c 3e       	cpi	r20, 0xEC	; 236
  a0:	00 00       	nop
  a2:	00 80       	ld	r0, Z
  a4:	be ab       	std	Y+54, r27	; 0x36
  a6:	aa aa       	std	Y+50, r10	; 0x32
  a8:	aa 3e       	cpi	r26, 0xEA	; 234
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	00 00       	nop
  b6:	00 00       	nop
  b8:	00 08       	sbc	r0, r0
  ba:	41 78       	andi	r20, 0x81	; 129
  bc:	d3 bb       	out	0x13, r29	; 19
  be:	43 87       	std	Z+11, r20	; 0x0b
  c0:	d1 13       	cpse	r29, r17
  c2:	3d 19       	sub	r19, r13
  c4:	0e 3c       	cpi	r16, 0xCE	; 206
  c6:	c3 bd       	out	0x23, r28	; 35
  c8:	42 82       	std	Z+2, r4	; 0x02
  ca:	ad 2b       	or	r26, r29
  cc:	3e 68       	ori	r19, 0x8E	; 142
  ce:	ec 82       	std	Y+4, r14	; 0x04
  d0:	76 be       	out	0x36, r7	; 54
  d2:	d9 8f       	std	Y+25, r29	; 0x19
  d4:	e1 a9       	ldd	r30, Z+49	; 0x31
  d6:	3e 4c       	sbci	r19, 0xCE	; 206
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	ff be       	out	0x3f, r15	; 63
  dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <_etext+0x17e>
  de:	ff 7f       	andi	r31, 0xFF	; 255
  e0:	3f 00       	.word	0x003f	; ????
  e2:	00 00       	nop
	...

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf ef       	ldi	r28, 0xFF	; 255
  ec:	d0 e1       	ldi	r29, 0x10	; 16
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61
  f2:	d5 d0       	rcall	.+426    	; 0x29e <main>
  f4:	34 c3       	rjmp	.+1640   	; 0x75e <_exit>

000000f6 <__bad_interrupt>:
  f6:	84 cf       	rjmp	.-248    	; 0x0 <__vectors>

000000f8 <spi_masterInit>:
void displayOff()
{
	spi_slaveSelect(0); // Select display chip
	spi_write(0x0C); // Register 0B: Shutdown register
	spi_write(0x00); // -> 1 = Normal operation
	spi_slaveDeSelect(0); // Deselect display chip
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	bb 98       	cbi	0x17, 3	; 23
  fe:	c0 9a       	sbi	0x18, 0	; 24
 100:	82 e5       	ldi	r24, 0x52	; 82
 102:	8d b9       	out	0x0d, r24	; 13
 104:	08 95       	ret

00000106 <spi_write>:
 106:	8f b9       	out	0x0f, r24	; 15
 108:	77 9b       	sbis	0x0e, 7	; 14
 10a:	fe cf       	rjmp	.-4      	; 0x108 <spi_write+0x2>
 10c:	08 95       	ret

0000010e <spi_slaveSelect>:
 10e:	98 b3       	in	r25, 0x18	; 24
 110:	21 e0       	ldi	r18, 0x01	; 1
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <spi_slaveSelect+0xc>
 116:	22 0f       	add	r18, r18
 118:	33 1f       	adc	r19, r19
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <spi_slaveSelect+0x8>
 11e:	20 95       	com	r18
 120:	29 23       	and	r18, r25
 122:	28 bb       	out	0x18, r18	; 24
 124:	08 95       	ret

00000126 <spi_slaveDeSelect>:
 126:	98 b3       	in	r25, 0x18	; 24
 128:	21 e0       	ldi	r18, 0x01	; 1
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <spi_slaveDeSelect+0xc>
 12e:	22 0f       	add	r18, r18
 130:	33 1f       	adc	r19, r19
 132:	8a 95       	dec	r24
 134:	e2 f7       	brpl	.-8      	; 0x12e <spi_slaveDeSelect+0x8>
 136:	29 2b       	or	r18, r25
 138:	28 bb       	out	0x18, r18	; 24
 13a:	08 95       	ret

0000013c <displayDriverInit>:
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	e7 df       	rcall	.-50     	; 0x10e <spi_slaveSelect>
 140:	89 e0       	ldi	r24, 0x09	; 9
 142:	e1 df       	rcall	.-62     	; 0x106 <spi_write>
 144:	8f e0       	ldi	r24, 0x0F	; 15
 146:	df df       	rcall	.-66     	; 0x106 <spi_write>
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	ed df       	rcall	.-38     	; 0x126 <spi_slaveDeSelect>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	df df       	rcall	.-66     	; 0x10e <spi_slaveSelect>
 150:	8a e0       	ldi	r24, 0x0A	; 10
 152:	d9 df       	rcall	.-78     	; 0x106 <spi_write>
 154:	84 e0       	ldi	r24, 0x04	; 4
 156:	d7 df       	rcall	.-82     	; 0x106 <spi_write>
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	e5 df       	rcall	.-54     	; 0x126 <spi_slaveDeSelect>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	d7 df       	rcall	.-82     	; 0x10e <spi_slaveSelect>
 160:	8b e0       	ldi	r24, 0x0B	; 11
 162:	d1 df       	rcall	.-94     	; 0x106 <spi_write>
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	cf df       	rcall	.-98     	; 0x106 <spi_write>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	dd df       	rcall	.-70     	; 0x126 <spi_slaveDeSelect>
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	cf df       	rcall	.-98     	; 0x10e <spi_slaveSelect>
 170:	8c e0       	ldi	r24, 0x0C	; 12
 172:	c9 df       	rcall	.-110    	; 0x106 <spi_write>
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	c7 df       	rcall	.-114    	; 0x106 <spi_write>
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	d5 cf       	rjmp	.-86     	; 0x126 <spi_slaveDeSelect>
 17c:	08 95       	ret

0000017e <spi_writeWord>:
}

void spi_writeWord(unsigned char address, unsigned char data)
{
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	d8 2f       	mov	r29, r24
 184:	c6 2f       	mov	r28, r22
	spi_slaveSelect(0);
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	c2 df       	rcall	.-124    	; 0x10e <spi_slaveSelect>
	spi_write(address);
 18a:	8d 2f       	mov	r24, r29
 18c:	bc df       	rcall	.-136    	; 0x106 <spi_write>
	spi_write(data);
 18e:	8c 2f       	mov	r24, r28
 190:	ba df       	rcall	.-140    	; 0x106 <spi_write>
	spi_slaveDeSelect(0);
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	c8 df       	rcall	.-112    	; 0x126 <spi_slaveDeSelect>
 196:	df 91       	pop	r29
}
 198:	cf 91       	pop	r28
 19a:	08 95       	ret

0000019c <emptyDisplay>:
 19c:	cf 93       	push	r28

void emptyDisplay()
{
 19e:	c1 e0       	ldi	r28, 0x01	; 1
	for (int i = 1; i <=4; i++)
		spi_writeWord(i, 0xF);
 1a0:	6f e0       	ldi	r22, 0x0F	; 15
 1a2:	8c 2f       	mov	r24, r28
 1a4:	ec df       	rcall	.-40     	; 0x17e <spi_writeWord>
 1a6:	cf 5f       	subi	r28, 0xFF	; 255
	spi_slaveDeSelect(0);
}

void emptyDisplay()
{
	for (int i = 1; i <=4; i++)
 1a8:	c5 30       	cpi	r28, 0x05	; 5
 1aa:	d1 f7       	brne	.-12     	; 0x1a0 <emptyDisplay+0x4>
		spi_writeWord(i, 0xF);
}
 1ac:	cf 91       	pop	r28
 1ae:	08 95       	ret

000001b0 <writeLedDisplay>:

void writeLedDisplay(int value) 
{
 1b0:	af 92       	push	r10
 1b2:	bf 92       	push	r11
 1b4:	cf 92       	push	r12
 1b6:	df 92       	push	r13
 1b8:	ef 92       	push	r14
 1ba:	ff 92       	push	r15
 1bc:	0f 93       	push	r16
 1be:	1f 93       	push	r17
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	89 31       	cpi	r24, 0x19	; 25
 1c6:	2c ef       	ldi	r18, 0xFC	; 252
 1c8:	92 07       	cpc	r25, r18
 1ca:	14 f4       	brge	.+4      	; 0x1d0 <writeLedDisplay+0x20>
 1cc:	89 e1       	ldi	r24, 0x19	; 25
 1ce:	9c ef       	ldi	r25, 0xFC	; 252
 1d0:	ec 01       	movw	r28, r24
 1d2:	c0 31       	cpi	r28, 0x10	; 16
 1d4:	87 e2       	ldi	r24, 0x27	; 39
 1d6:	d8 07       	cpc	r29, r24
 1d8:	14 f0       	brlt	.+4      	; 0x1de <writeLedDisplay+0x2e>
 1da:	cf e0       	ldi	r28, 0x0F	; 15
 1dc:	d7 e2       	ldi	r29, 0x27	; 39
	if (value > 9999)	
		value = 9999;
	else if (value < -999)
		value = -999;	
	
	if (value >= 0)	
 1de:	dd 23       	and	r29, r29
 1e0:	3c f1       	brlt	.+78     	; 0x230 <writeLedDisplay+0x80>
	{
		int length = (int) log10(value) + 1;
 1e2:	be 01       	movw	r22, r28
 1e4:	0d 2e       	mov	r0, r29
 1e6:	00 0c       	add	r0, r0
 1e8:	88 0b       	sbc	r24, r24
 1ea:	99 0b       	sbc	r25, r25
 1ec:	bf d0       	rcall	.+382    	; 0x36c <__floatsisf>
 1ee:	22 d1       	rcall	.+580    	; 0x434 <log10>
 1f0:	8a d0       	rcall	.+276    	; 0x306 <__fixsfsi>
 1f2:	6b 01       	movw	r12, r22
 1f4:	2f ef       	ldi	r18, 0xFF	; 255
 1f6:	c2 1a       	sub	r12, r18
 1f8:	d2 0a       	sbc	r13, r18
		for (int i = 1; i <= length; i++)
 1fa:	1c 14       	cp	r1, r12
 1fc:	1d 04       	cpc	r1, r13
 1fe:	0c f0       	brlt	.+2      	; 0x202 <writeLedDisplay+0x52>
 200:	43 c0       	rjmp	.+134    	; 0x288 <writeLedDisplay+0xd8>
 202:	01 e0       	ldi	r16, 0x01	; 1
 204:	10 e0       	ldi	r17, 0x00	; 0
		{
			spi_writeWord(i, value % 10);
 206:	0f 2e       	mov	r0, r31
 208:	fa e0       	ldi	r31, 0x0A	; 10
 20a:	af 2e       	mov	r10, r31
 20c:	b1 2c       	mov	r11, r1
 20e:	f0 2d       	mov	r31, r0
 210:	ce 01       	movw	r24, r28
 212:	b5 01       	movw	r22, r10
 214:	7d d2       	rcall	.+1274   	; 0x710 <__divmodhi4>
 216:	e6 2e       	mov	r14, r22
 218:	f7 2e       	mov	r15, r23
 21a:	68 2f       	mov	r22, r24
 21c:	80 2f       	mov	r24, r16
 21e:	af df       	rcall	.-162    	; 0x17e <spi_writeWord>
			value /= 10;
 220:	ce 2d       	mov	r28, r14
 222:	df 2d       	mov	r29, r15
		value = -999;	
	
	if (value >= 0)	
	{
		int length = (int) log10(value) + 1;
		for (int i = 1; i <= length; i++)
 224:	0f 5f       	subi	r16, 0xFF	; 255
 226:	1f 4f       	sbci	r17, 0xFF	; 255
 228:	c0 16       	cp	r12, r16
 22a:	d1 06       	cpc	r13, r17
 22c:	8c f7       	brge	.-30     	; 0x210 <writeLedDisplay+0x60>
 22e:	2c c0       	rjmp	.+88     	; 0x288 <writeLedDisplay+0xd8>
			value /= 10;
		}
	}
	else
	{			
		value = -value;
 230:	d1 95       	neg	r29
 232:	c1 95       	neg	r28
 234:	d1 09       	sbc	r29, r1
		int length = (int) log10(value) + 1;
 236:	be 01       	movw	r22, r28
 238:	0d 2e       	mov	r0, r29
 23a:	00 0c       	add	r0, r0
 23c:	88 0b       	sbc	r24, r24
 23e:	99 0b       	sbc	r25, r25
 240:	95 d0       	rcall	.+298    	; 0x36c <__floatsisf>
 242:	f8 d0       	rcall	.+496    	; 0x434 <log10>
 244:	60 d0       	rcall	.+192    	; 0x306 <__fixsfsi>
 246:	6b 01       	movw	r12, r22
 248:	2f ef       	ldi	r18, 0xFF	; 255
 24a:	c2 1a       	sub	r12, r18
		spi_writeWord(length + 1, 10);
 24c:	d2 0a       	sbc	r13, r18
 24e:	6a e0       	ldi	r22, 0x0A	; 10
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	8c 0d       	add	r24, r12
 254:	94 df       	rcall	.-216    	; 0x17e <spi_writeWord>
		for (int i = 1; i <= length; i++)
 256:	1c 14       	cp	r1, r12
 258:	1d 04       	cpc	r1, r13
 25a:	b4 f4       	brge	.+44     	; 0x288 <writeLedDisplay+0xd8>
 25c:	01 e0       	ldi	r16, 0x01	; 1
		{
			spi_writeWord(i, value % 10);
 25e:	10 e0       	ldi	r17, 0x00	; 0
 260:	0f 2e       	mov	r0, r31
 262:	fa e0       	ldi	r31, 0x0A	; 10
 264:	af 2e       	mov	r10, r31
 266:	b1 2c       	mov	r11, r1
 268:	f0 2d       	mov	r31, r0
 26a:	ce 01       	movw	r24, r28
 26c:	b5 01       	movw	r22, r10
 26e:	50 d2       	rcall	.+1184   	; 0x710 <__divmodhi4>
 270:	e6 2e       	mov	r14, r22
 272:	f7 2e       	mov	r15, r23
 274:	68 2f       	mov	r22, r24
 276:	80 2f       	mov	r24, r16
 278:	82 df       	rcall	.-252    	; 0x17e <spi_writeWord>
			value /= 10;
 27a:	ce 2d       	mov	r28, r14
 27c:	df 2d       	mov	r29, r15
	else
	{			
		value = -value;
		int length = (int) log10(value) + 1;
		spi_writeWord(length + 1, 10);
		for (int i = 1; i <= length; i++)
 27e:	0f 5f       	subi	r16, 0xFF	; 255
 280:	1f 4f       	sbci	r17, 0xFF	; 255
 282:	c0 16       	cp	r12, r16
 284:	d1 06       	cpc	r13, r17
 286:	8c f7       	brge	.-30     	; 0x26a <writeLedDisplay+0xba>
			spi_writeWord(i, value % 10);
			value /= 10;
		}		
	}
		
}
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	1f 91       	pop	r17
 28e:	0f 91       	pop	r16
 290:	ff 90       	pop	r15
 292:	ef 90       	pop	r14
 294:	df 90       	pop	r13
 296:	cf 90       	pop	r12
 298:	bf 90       	pop	r11
 29a:	af 90       	pop	r10
 29c:	08 95       	ret

0000029e <main>:

int main()
{
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
	DDRB=0x01; // Set PB0 pin as output for display select
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	87 bb       	out	0x17, r24	; 23
	spi_masterInit(); // Initialize spi module
 2a6:	28 df       	rcall	.-432    	; 0xf8 <spi_masterInit>
	displayDriverInit(); // Initialize display chip
 2a8:	49 df       	rcall	.-366    	; 0x13c <displayDriverInit>
 2aa:	c1 e0       	ldi	r28, 0x01	; 1
 2ac:	d5 e0       	ldi	r29, 0x05	; 5
	
	for (int i = 4; i >= 1; i--)
	{
		spi_slaveSelect(0); // Select display chip
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	2e df       	rcall	.-420    	; 0x10e <spi_slaveSelect>
		spi_write(5-i); // digit adress: (digit place)
 2b2:	8c 2f       	mov	r24, r28
 2b4:	28 df       	rcall	.-432    	; 0x106 <spi_write>
		spi_write(i); // digit value: 0
 2b6:	8d 2f       	mov	r24, r29
 2b8:	8c 1b       	sub	r24, r28
 2ba:	25 df       	rcall	.-438    	; 0x106 <spi_write>
		spi_slaveDeSelect(0); // Deselect display chip
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	33 df       	rcall	.-410    	; 0x126 <spi_slaveDeSelect>
 2c0:	cf 5f       	subi	r28, 0xFF	; 255
{
	DDRB=0x01; // Set PB0 pin as output for display select
	spi_masterInit(); // Initialize spi module
	displayDriverInit(); // Initialize display chip
	
	for (int i = 4; i >= 1; i--)
 2c2:	c5 30       	cpi	r28, 0x05	; 5
		spi_write(5-i); // digit adress: (digit place)
		spi_write(i); // digit value: 0
		spi_slaveDeSelect(0); // Deselect display chip
	}
	
	spi_writeWord(0x0A, 0x0F);
 2c4:	a1 f7       	brne	.-24     	; 0x2ae <main+0x10>
 2c6:	6f e0       	ldi	r22, 0x0F	; 15
 2c8:	8a e0       	ldi	r24, 0x0A	; 10
	
	wait(2000);
 2ca:	59 df       	rcall	.-334    	; 0x17e <spi_writeWord>
 2cc:	80 ed       	ldi	r24, 0xD0	; 208
 2ce:	97 e0       	ldi	r25, 0x07	; 7
 2d0:	09 d0       	rcall	.+18     	; 0x2e4 <wait>
	
	emptyDisplay();
 2d2:	64 df       	rcall	.-312    	; 0x19c <emptyDisplay>
 2d4:	8b eb       	ldi	r24, 0xBB	; 187
	writeLedDisplay(-69);
 2d6:	9f ef       	ldi	r25, 0xFF	; 255
 2d8:	6b df       	rcall	.-298    	; 0x1b0 <writeLedDisplay>
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
	
	return (1);
 2de:	df 91       	pop	r29
 2e0:	cf 91       	pop	r28
 2e2:	08 95       	ret

000002e4 <wait>:
 */ 
#include "toolbox.h"

void wait( int ms )
{
	for (int i=0; i<ms; i++)
 2e4:	18 16       	cp	r1, r24
 2e6:	19 06       	cpc	r1, r25
 2e8:	6c f4       	brge	.+26     	; 0x304 <wait+0x20>
 2ea:	20 e0       	ldi	r18, 0x00	; 0
 2ec:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ee:	ef ec       	ldi	r30, 0xCF	; 207
 2f0:	f7 e0       	ldi	r31, 0x07	; 7
 2f2:	31 97       	sbiw	r30, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <wait+0xe>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <wait+0x14>
 2f8:	00 00       	nop
 2fa:	2f 5f       	subi	r18, 0xFF	; 255
 2fc:	3f 4f       	sbci	r19, 0xFF	; 255
 2fe:	82 17       	cp	r24, r18
 300:	93 07       	cpc	r25, r19
 302:	a9 f7       	brne	.-22     	; 0x2ee <wait+0xa>
 304:	08 95       	ret

00000306 <__fixsfsi>:
 306:	04 d0       	rcall	.+8      	; 0x310 <__fixunssfsi>
 308:	68 94       	set
 30a:	b1 11       	cpse	r27, r1
 30c:	8d c0       	rjmp	.+282    	; 0x428 <__fp_szero>
 30e:	08 95       	ret

00000310 <__fixunssfsi>:
 310:	70 d0       	rcall	.+224    	; 0x3f2 <__fp_splitA>
 312:	88 f0       	brcs	.+34     	; 0x336 <__fixunssfsi+0x26>
 314:	9f 57       	subi	r25, 0x7F	; 127
 316:	90 f0       	brcs	.+36     	; 0x33c <__fixunssfsi+0x2c>
 318:	b9 2f       	mov	r27, r25
 31a:	99 27       	eor	r25, r25
 31c:	b7 51       	subi	r27, 0x17	; 23
 31e:	a0 f0       	brcs	.+40     	; 0x348 <__fixunssfsi+0x38>
 320:	d1 f0       	breq	.+52     	; 0x356 <__fixunssfsi+0x46>
 322:	66 0f       	add	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	1a f0       	brmi	.+6      	; 0x332 <__fixunssfsi+0x22>
 32c:	ba 95       	dec	r27
 32e:	c9 f7       	brne	.-14     	; 0x322 <__fixunssfsi+0x12>
 330:	12 c0       	rjmp	.+36     	; 0x356 <__fixunssfsi+0x46>
 332:	b1 30       	cpi	r27, 0x01	; 1
 334:	81 f0       	breq	.+32     	; 0x356 <__fixunssfsi+0x46>
 336:	77 d0       	rcall	.+238    	; 0x426 <__fp_zero>
 338:	b1 e0       	ldi	r27, 0x01	; 1
 33a:	08 95       	ret
 33c:	74 c0       	rjmp	.+232    	; 0x426 <__fp_zero>
 33e:	67 2f       	mov	r22, r23
 340:	78 2f       	mov	r23, r24
 342:	88 27       	eor	r24, r24
 344:	b8 5f       	subi	r27, 0xF8	; 248
 346:	39 f0       	breq	.+14     	; 0x356 <__fixunssfsi+0x46>
 348:	b9 3f       	cpi	r27, 0xF9	; 249
 34a:	cc f3       	brlt	.-14     	; 0x33e <__fixunssfsi+0x2e>
 34c:	86 95       	lsr	r24
 34e:	77 95       	ror	r23
 350:	67 95       	ror	r22
 352:	b3 95       	inc	r27
 354:	d9 f7       	brne	.-10     	; 0x34c <__fixunssfsi+0x3c>
 356:	3e f4       	brtc	.+14     	; 0x366 <__fixunssfsi+0x56>
 358:	90 95       	com	r25
 35a:	80 95       	com	r24
 35c:	70 95       	com	r23
 35e:	61 95       	neg	r22
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	8f 4f       	sbci	r24, 0xFF	; 255
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	08 95       	ret

00000368 <__floatunsisf>:
 368:	e8 94       	clt
 36a:	09 c0       	rjmp	.+18     	; 0x37e <__floatsisf+0x12>

0000036c <__floatsisf>:
 36c:	97 fb       	bst	r25, 7
 36e:	3e f4       	brtc	.+14     	; 0x37e <__floatsisf+0x12>
 370:	90 95       	com	r25
 372:	80 95       	com	r24
 374:	70 95       	com	r23
 376:	61 95       	neg	r22
 378:	7f 4f       	sbci	r23, 0xFF	; 255
 37a:	8f 4f       	sbci	r24, 0xFF	; 255
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	99 23       	and	r25, r25
 380:	a9 f0       	breq	.+42     	; 0x3ac <__floatsisf+0x40>
 382:	f9 2f       	mov	r31, r25
 384:	96 e9       	ldi	r25, 0x96	; 150
 386:	bb 27       	eor	r27, r27
 388:	93 95       	inc	r25
 38a:	f6 95       	lsr	r31
 38c:	87 95       	ror	r24
 38e:	77 95       	ror	r23
 390:	67 95       	ror	r22
 392:	b7 95       	ror	r27
 394:	f1 11       	cpse	r31, r1
 396:	f8 cf       	rjmp	.-16     	; 0x388 <__floatsisf+0x1c>
 398:	fa f4       	brpl	.+62     	; 0x3d8 <__floatsisf+0x6c>
 39a:	bb 0f       	add	r27, r27
 39c:	11 f4       	brne	.+4      	; 0x3a2 <__floatsisf+0x36>
 39e:	60 ff       	sbrs	r22, 0
 3a0:	1b c0       	rjmp	.+54     	; 0x3d8 <__floatsisf+0x6c>
 3a2:	6f 5f       	subi	r22, 0xFF	; 255
 3a4:	7f 4f       	sbci	r23, 0xFF	; 255
 3a6:	8f 4f       	sbci	r24, 0xFF	; 255
 3a8:	9f 4f       	sbci	r25, 0xFF	; 255
 3aa:	16 c0       	rjmp	.+44     	; 0x3d8 <__floatsisf+0x6c>
 3ac:	88 23       	and	r24, r24
 3ae:	11 f0       	breq	.+4      	; 0x3b4 <__floatsisf+0x48>
 3b0:	96 e9       	ldi	r25, 0x96	; 150
 3b2:	11 c0       	rjmp	.+34     	; 0x3d6 <__floatsisf+0x6a>
 3b4:	77 23       	and	r23, r23
 3b6:	21 f0       	breq	.+8      	; 0x3c0 <__floatsisf+0x54>
 3b8:	9e e8       	ldi	r25, 0x8E	; 142
 3ba:	87 2f       	mov	r24, r23
 3bc:	76 2f       	mov	r23, r22
 3be:	05 c0       	rjmp	.+10     	; 0x3ca <__floatsisf+0x5e>
 3c0:	66 23       	and	r22, r22
 3c2:	71 f0       	breq	.+28     	; 0x3e0 <__floatsisf+0x74>
 3c4:	96 e8       	ldi	r25, 0x86	; 134
 3c6:	86 2f       	mov	r24, r22
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	60 e0       	ldi	r22, 0x00	; 0
 3cc:	2a f0       	brmi	.+10     	; 0x3d8 <__floatsisf+0x6c>
 3ce:	9a 95       	dec	r25
 3d0:	66 0f       	add	r22, r22
 3d2:	77 1f       	adc	r23, r23
 3d4:	88 1f       	adc	r24, r24
 3d6:	da f7       	brpl	.-10     	; 0x3ce <__floatsisf+0x62>
 3d8:	88 0f       	add	r24, r24
 3da:	96 95       	lsr	r25
 3dc:	87 95       	ror	r24
 3de:	97 f9       	bld	r25, 7
 3e0:	08 95       	ret

000003e2 <__fp_split3>:
 3e2:	57 fd       	sbrc	r21, 7
 3e4:	90 58       	subi	r25, 0x80	; 128
 3e6:	44 0f       	add	r20, r20
 3e8:	55 1f       	adc	r21, r21
 3ea:	59 f0       	breq	.+22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ec:	5f 3f       	cpi	r21, 0xFF	; 255
 3ee:	71 f0       	breq	.+28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f0:	47 95       	ror	r20

000003f2 <__fp_splitA>:
 3f2:	88 0f       	add	r24, r24
 3f4:	97 fb       	bst	r25, 7
 3f6:	99 1f       	adc	r25, r25
 3f8:	61 f0       	breq	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fa:	9f 3f       	cpi	r25, 0xFF	; 255
 3fc:	79 f0       	breq	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	87 95       	ror	r24
 400:	08 95       	ret
 402:	12 16       	cp	r1, r18
 404:	13 06       	cpc	r1, r19
 406:	14 06       	cpc	r1, r20
 408:	55 1f       	adc	r21, r21
 40a:	f2 cf       	rjmp	.-28     	; 0x3f0 <__fp_split3+0xe>
 40c:	46 95       	lsr	r20
 40e:	f1 df       	rcall	.-30     	; 0x3f2 <__fp_splitA>
 410:	08 c0       	rjmp	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 412:	16 16       	cp	r1, r22
 414:	17 06       	cpc	r1, r23
 416:	18 06       	cpc	r1, r24
 418:	99 1f       	adc	r25, r25
 41a:	f1 cf       	rjmp	.-30     	; 0x3fe <__fp_splitA+0xc>
 41c:	86 95       	lsr	r24
 41e:	71 05       	cpc	r23, r1
 420:	61 05       	cpc	r22, r1
 422:	08 94       	sec
 424:	08 95       	ret

00000426 <__fp_zero>:
 426:	e8 94       	clt

00000428 <__fp_szero>:
 428:	bb 27       	eor	r27, r27
 42a:	66 27       	eor	r22, r22
 42c:	77 27       	eor	r23, r23
 42e:	cb 01       	movw	r24, r22
 430:	97 f9       	bld	r25, 7
 432:	08 95       	ret

00000434 <log10>:
 434:	0a d0       	rcall	.+20     	; 0x44a <log>
 436:	29 ed       	ldi	r18, 0xD9	; 217
 438:	3b e5       	ldi	r19, 0x5B	; 91
 43a:	4e ed       	ldi	r20, 0xDE	; 222
 43c:	5e e3       	ldi	r21, 0x3E	; 62
 43e:	45 c0       	rjmp	.+138    	; 0x4ca <__mulsf3>
 440:	0e f0       	brts	.+2      	; 0x444 <log10+0x10>
 442:	11 c1       	rjmp	.+546    	; 0x666 <__fp_mpack>
 444:	1e c1       	rjmp	.+572    	; 0x682 <__fp_nan>
 446:	68 94       	set
 448:	08 c1       	rjmp	.+528    	; 0x65a <__fp_inf>

0000044a <log>:
 44a:	d3 df       	rcall	.-90     	; 0x3f2 <__fp_splitA>
 44c:	c8 f3       	brcs	.-14     	; 0x440 <log10+0xc>
 44e:	99 23       	and	r25, r25
 450:	d1 f3       	breq	.-12     	; 0x446 <log10+0x12>
 452:	c6 f3       	brts	.-16     	; 0x444 <log10+0x10>
 454:	df 93       	push	r29
 456:	cf 93       	push	r28
 458:	1f 93       	push	r17
 45a:	0f 93       	push	r16
 45c:	ff 92       	push	r15
 45e:	c9 2f       	mov	r28, r25
 460:	dd 27       	eor	r29, r29
 462:	88 23       	and	r24, r24
 464:	2a f0       	brmi	.+10     	; 0x470 <log+0x26>
 466:	21 97       	sbiw	r28, 0x01	; 1
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	da f7       	brpl	.-10     	; 0x466 <log+0x1c>
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	40 e8       	ldi	r20, 0x80	; 128
 476:	5f eb       	ldi	r21, 0xBF	; 191
 478:	9f e3       	ldi	r25, 0x3F	; 63
 47a:	88 39       	cpi	r24, 0x98	; 152
 47c:	20 f0       	brcs	.+8      	; 0x486 <log+0x3c>
 47e:	80 3e       	cpi	r24, 0xE0	; 224
 480:	30 f0       	brcs	.+12     	; 0x48e <log+0x44>
 482:	21 96       	adiw	r28, 0x01	; 1
 484:	8f 77       	andi	r24, 0x7F	; 127
 486:	85 d0       	rcall	.+266    	; 0x592 <__addsf3>
 488:	ec e8       	ldi	r30, 0x8C	; 140
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	03 c0       	rjmp	.+6      	; 0x494 <log+0x4a>
 48e:	81 d0       	rcall	.+258    	; 0x592 <__addsf3>
 490:	e9 eb       	ldi	r30, 0xB9	; 185
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	f9 d0       	rcall	.+498    	; 0x688 <__fp_powser>
 496:	8b 01       	movw	r16, r22
 498:	be 01       	movw	r22, r28
 49a:	ec 01       	movw	r28, r24
 49c:	fb 2e       	mov	r15, r27
 49e:	6f 57       	subi	r22, 0x7F	; 127
 4a0:	71 09       	sbc	r23, r1
 4a2:	75 95       	asr	r23
 4a4:	77 1f       	adc	r23, r23
 4a6:	88 0b       	sbc	r24, r24
 4a8:	99 0b       	sbc	r25, r25
 4aa:	60 df       	rcall	.-320    	; 0x36c <__floatsisf>
 4ac:	28 e1       	ldi	r18, 0x18	; 24
 4ae:	32 e7       	ldi	r19, 0x72	; 114
 4b0:	41 e3       	ldi	r20, 0x31	; 49
 4b2:	5f e3       	ldi	r21, 0x3F	; 63
 4b4:	16 d0       	rcall	.+44     	; 0x4e2 <__mulsf3x>
 4b6:	af 2d       	mov	r26, r15
 4b8:	98 01       	movw	r18, r16
 4ba:	ae 01       	movw	r20, r28
 4bc:	ff 90       	pop	r15
 4be:	0f 91       	pop	r16
 4c0:	1f 91       	pop	r17
 4c2:	cf 91       	pop	r28
 4c4:	df 91       	pop	r29
 4c6:	76 d0       	rcall	.+236    	; 0x5b4 <__addsf3x>
 4c8:	12 c1       	rjmp	.+548    	; 0x6ee <__fp_round>

000004ca <__mulsf3>:
 4ca:	0b d0       	rcall	.+22     	; 0x4e2 <__mulsf3x>
 4cc:	10 c1       	rjmp	.+544    	; 0x6ee <__fp_round>
 4ce:	01 d1       	rcall	.+514    	; 0x6d2 <__fp_pscA>
 4d0:	28 f0       	brcs	.+10     	; 0x4dc <__mulsf3+0x12>
 4d2:	06 d1       	rcall	.+524    	; 0x6e0 <__fp_pscB>
 4d4:	18 f0       	brcs	.+6      	; 0x4dc <__mulsf3+0x12>
 4d6:	95 23       	and	r25, r21
 4d8:	09 f0       	breq	.+2      	; 0x4dc <__mulsf3+0x12>
 4da:	bf c0       	rjmp	.+382    	; 0x65a <__fp_inf>
 4dc:	d2 c0       	rjmp	.+420    	; 0x682 <__fp_nan>
 4de:	11 24       	eor	r1, r1
 4e0:	a3 cf       	rjmp	.-186    	; 0x428 <__fp_szero>

000004e2 <__mulsf3x>:
 4e2:	7f df       	rcall	.-258    	; 0x3e2 <__fp_split3>
 4e4:	a0 f3       	brcs	.-24     	; 0x4ce <__mulsf3+0x4>

000004e6 <__mulsf3_pse>:
 4e6:	95 9f       	mul	r25, r21
 4e8:	d1 f3       	breq	.-12     	; 0x4de <__mulsf3+0x14>
 4ea:	95 0f       	add	r25, r21
 4ec:	50 e0       	ldi	r21, 0x00	; 0
 4ee:	55 1f       	adc	r21, r21
 4f0:	62 9f       	mul	r22, r18
 4f2:	f0 01       	movw	r30, r0
 4f4:	72 9f       	mul	r23, r18
 4f6:	bb 27       	eor	r27, r27
 4f8:	f0 0d       	add	r31, r0
 4fa:	b1 1d       	adc	r27, r1
 4fc:	63 9f       	mul	r22, r19
 4fe:	aa 27       	eor	r26, r26
 500:	f0 0d       	add	r31, r0
 502:	b1 1d       	adc	r27, r1
 504:	aa 1f       	adc	r26, r26
 506:	64 9f       	mul	r22, r20
 508:	66 27       	eor	r22, r22
 50a:	b0 0d       	add	r27, r0
 50c:	a1 1d       	adc	r26, r1
 50e:	66 1f       	adc	r22, r22
 510:	82 9f       	mul	r24, r18
 512:	22 27       	eor	r18, r18
 514:	b0 0d       	add	r27, r0
 516:	a1 1d       	adc	r26, r1
 518:	62 1f       	adc	r22, r18
 51a:	73 9f       	mul	r23, r19
 51c:	b0 0d       	add	r27, r0
 51e:	a1 1d       	adc	r26, r1
 520:	62 1f       	adc	r22, r18
 522:	83 9f       	mul	r24, r19
 524:	a0 0d       	add	r26, r0
 526:	61 1d       	adc	r22, r1
 528:	22 1f       	adc	r18, r18
 52a:	74 9f       	mul	r23, r20
 52c:	33 27       	eor	r19, r19
 52e:	a0 0d       	add	r26, r0
 530:	61 1d       	adc	r22, r1
 532:	23 1f       	adc	r18, r19
 534:	84 9f       	mul	r24, r20
 536:	60 0d       	add	r22, r0
 538:	21 1d       	adc	r18, r1
 53a:	82 2f       	mov	r24, r18
 53c:	76 2f       	mov	r23, r22
 53e:	6a 2f       	mov	r22, r26
 540:	11 24       	eor	r1, r1
 542:	9f 57       	subi	r25, 0x7F	; 127
 544:	50 40       	sbci	r21, 0x00	; 0
 546:	8a f0       	brmi	.+34     	; 0x56a <__mulsf3_pse+0x84>
 548:	e1 f0       	breq	.+56     	; 0x582 <__mulsf3_pse+0x9c>
 54a:	88 23       	and	r24, r24
 54c:	4a f0       	brmi	.+18     	; 0x560 <__mulsf3_pse+0x7a>
 54e:	ee 0f       	add	r30, r30
 550:	ff 1f       	adc	r31, r31
 552:	bb 1f       	adc	r27, r27
 554:	66 1f       	adc	r22, r22
 556:	77 1f       	adc	r23, r23
 558:	88 1f       	adc	r24, r24
 55a:	91 50       	subi	r25, 0x01	; 1
 55c:	50 40       	sbci	r21, 0x00	; 0
 55e:	a9 f7       	brne	.-22     	; 0x54a <__mulsf3_pse+0x64>
 560:	9e 3f       	cpi	r25, 0xFE	; 254
 562:	51 05       	cpc	r21, r1
 564:	70 f0       	brcs	.+28     	; 0x582 <__mulsf3_pse+0x9c>
 566:	79 c0       	rjmp	.+242    	; 0x65a <__fp_inf>
 568:	5f cf       	rjmp	.-322    	; 0x428 <__fp_szero>
 56a:	5f 3f       	cpi	r21, 0xFF	; 255
 56c:	ec f3       	brlt	.-6      	; 0x568 <__mulsf3_pse+0x82>
 56e:	98 3e       	cpi	r25, 0xE8	; 232
 570:	dc f3       	brlt	.-10     	; 0x568 <__mulsf3_pse+0x82>
 572:	86 95       	lsr	r24
 574:	77 95       	ror	r23
 576:	67 95       	ror	r22
 578:	b7 95       	ror	r27
 57a:	f7 95       	ror	r31
 57c:	e7 95       	ror	r30
 57e:	9f 5f       	subi	r25, 0xFF	; 255
 580:	c1 f7       	brne	.-16     	; 0x572 <__mulsf3_pse+0x8c>
 582:	fe 2b       	or	r31, r30
 584:	88 0f       	add	r24, r24
 586:	91 1d       	adc	r25, r1
 588:	96 95       	lsr	r25
 58a:	87 95       	ror	r24
 58c:	97 f9       	bld	r25, 7
 58e:	08 95       	ret

00000590 <__subsf3>:
 590:	50 58       	subi	r21, 0x80	; 128

00000592 <__addsf3>:
 592:	bb 27       	eor	r27, r27
 594:	aa 27       	eor	r26, r26
 596:	0e d0       	rcall	.+28     	; 0x5b4 <__addsf3x>
 598:	aa c0       	rjmp	.+340    	; 0x6ee <__fp_round>
 59a:	9b d0       	rcall	.+310    	; 0x6d2 <__fp_pscA>
 59c:	30 f0       	brcs	.+12     	; 0x5aa <__addsf3+0x18>
 59e:	a0 d0       	rcall	.+320    	; 0x6e0 <__fp_pscB>
 5a0:	20 f0       	brcs	.+8      	; 0x5aa <__addsf3+0x18>
 5a2:	31 f4       	brne	.+12     	; 0x5b0 <__addsf3+0x1e>
 5a4:	9f 3f       	cpi	r25, 0xFF	; 255
 5a6:	11 f4       	brne	.+4      	; 0x5ac <__addsf3+0x1a>
 5a8:	1e f4       	brtc	.+6      	; 0x5b0 <__addsf3+0x1e>
 5aa:	6b c0       	rjmp	.+214    	; 0x682 <__fp_nan>
 5ac:	0e f4       	brtc	.+2      	; 0x5b0 <__addsf3+0x1e>
 5ae:	e0 95       	com	r30
 5b0:	e7 fb       	bst	r30, 7
 5b2:	53 c0       	rjmp	.+166    	; 0x65a <__fp_inf>

000005b4 <__addsf3x>:
 5b4:	e9 2f       	mov	r30, r25
 5b6:	15 df       	rcall	.-470    	; 0x3e2 <__fp_split3>
 5b8:	80 f3       	brcs	.-32     	; 0x59a <__addsf3+0x8>
 5ba:	ba 17       	cp	r27, r26
 5bc:	62 07       	cpc	r22, r18
 5be:	73 07       	cpc	r23, r19
 5c0:	84 07       	cpc	r24, r20
 5c2:	95 07       	cpc	r25, r21
 5c4:	18 f0       	brcs	.+6      	; 0x5cc <__addsf3x+0x18>
 5c6:	71 f4       	brne	.+28     	; 0x5e4 <__addsf3x+0x30>
 5c8:	9e f5       	brtc	.+102    	; 0x630 <__addsf3x+0x7c>
 5ca:	2d cf       	rjmp	.-422    	; 0x426 <__fp_zero>
 5cc:	0e f4       	brtc	.+2      	; 0x5d0 <__addsf3x+0x1c>
 5ce:	e0 95       	com	r30
 5d0:	0b 2e       	mov	r0, r27
 5d2:	ba 2f       	mov	r27, r26
 5d4:	a0 2d       	mov	r26, r0
 5d6:	0b 01       	movw	r0, r22
 5d8:	b9 01       	movw	r22, r18
 5da:	90 01       	movw	r18, r0
 5dc:	0c 01       	movw	r0, r24
 5de:	ca 01       	movw	r24, r20
 5e0:	a0 01       	movw	r20, r0
 5e2:	11 24       	eor	r1, r1
 5e4:	ff 27       	eor	r31, r31
 5e6:	59 1b       	sub	r21, r25
 5e8:	99 f0       	breq	.+38     	; 0x610 <__addsf3x+0x5c>
 5ea:	59 3f       	cpi	r21, 0xF9	; 249
 5ec:	50 f4       	brcc	.+20     	; 0x602 <__addsf3x+0x4e>
 5ee:	50 3e       	cpi	r21, 0xE0	; 224
 5f0:	68 f1       	brcs	.+90     	; 0x64c <__addsf3x+0x98>
 5f2:	1a 16       	cp	r1, r26
 5f4:	f0 40       	sbci	r31, 0x00	; 0
 5f6:	a2 2f       	mov	r26, r18
 5f8:	23 2f       	mov	r18, r19
 5fa:	34 2f       	mov	r19, r20
 5fc:	44 27       	eor	r20, r20
 5fe:	58 5f       	subi	r21, 0xF8	; 248
 600:	f3 cf       	rjmp	.-26     	; 0x5e8 <__addsf3x+0x34>
 602:	46 95       	lsr	r20
 604:	37 95       	ror	r19
 606:	27 95       	ror	r18
 608:	a7 95       	ror	r26
 60a:	f0 40       	sbci	r31, 0x00	; 0
 60c:	53 95       	inc	r21
 60e:	c9 f7       	brne	.-14     	; 0x602 <__addsf3x+0x4e>
 610:	7e f4       	brtc	.+30     	; 0x630 <__addsf3x+0x7c>
 612:	1f 16       	cp	r1, r31
 614:	ba 0b       	sbc	r27, r26
 616:	62 0b       	sbc	r22, r18
 618:	73 0b       	sbc	r23, r19
 61a:	84 0b       	sbc	r24, r20
 61c:	ba f0       	brmi	.+46     	; 0x64c <__addsf3x+0x98>
 61e:	91 50       	subi	r25, 0x01	; 1
 620:	a1 f0       	breq	.+40     	; 0x64a <__addsf3x+0x96>
 622:	ff 0f       	add	r31, r31
 624:	bb 1f       	adc	r27, r27
 626:	66 1f       	adc	r22, r22
 628:	77 1f       	adc	r23, r23
 62a:	88 1f       	adc	r24, r24
 62c:	c2 f7       	brpl	.-16     	; 0x61e <__addsf3x+0x6a>
 62e:	0e c0       	rjmp	.+28     	; 0x64c <__addsf3x+0x98>
 630:	ba 0f       	add	r27, r26
 632:	62 1f       	adc	r22, r18
 634:	73 1f       	adc	r23, r19
 636:	84 1f       	adc	r24, r20
 638:	48 f4       	brcc	.+18     	; 0x64c <__addsf3x+0x98>
 63a:	87 95       	ror	r24
 63c:	77 95       	ror	r23
 63e:	67 95       	ror	r22
 640:	b7 95       	ror	r27
 642:	f7 95       	ror	r31
 644:	9e 3f       	cpi	r25, 0xFE	; 254
 646:	08 f0       	brcs	.+2      	; 0x64a <__addsf3x+0x96>
 648:	b3 cf       	rjmp	.-154    	; 0x5b0 <__addsf3+0x1e>
 64a:	93 95       	inc	r25
 64c:	88 0f       	add	r24, r24
 64e:	08 f0       	brcs	.+2      	; 0x652 <__addsf3x+0x9e>
 650:	99 27       	eor	r25, r25
 652:	ee 0f       	add	r30, r30
 654:	97 95       	ror	r25
 656:	87 95       	ror	r24
 658:	08 95       	ret

0000065a <__fp_inf>:
 65a:	97 f9       	bld	r25, 7
 65c:	9f 67       	ori	r25, 0x7F	; 127
 65e:	80 e8       	ldi	r24, 0x80	; 128
 660:	70 e0       	ldi	r23, 0x00	; 0
 662:	60 e0       	ldi	r22, 0x00	; 0
 664:	08 95       	ret

00000666 <__fp_mpack>:
 666:	9f 3f       	cpi	r25, 0xFF	; 255
 668:	31 f0       	breq	.+12     	; 0x676 <__fp_mpack_finite+0xc>

0000066a <__fp_mpack_finite>:
 66a:	91 50       	subi	r25, 0x01	; 1
 66c:	20 f4       	brcc	.+8      	; 0x676 <__fp_mpack_finite+0xc>
 66e:	87 95       	ror	r24
 670:	77 95       	ror	r23
 672:	67 95       	ror	r22
 674:	b7 95       	ror	r27
 676:	88 0f       	add	r24, r24
 678:	91 1d       	adc	r25, r1
 67a:	96 95       	lsr	r25
 67c:	87 95       	ror	r24
 67e:	97 f9       	bld	r25, 7
 680:	08 95       	ret

00000682 <__fp_nan>:
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	80 ec       	ldi	r24, 0xC0	; 192
 686:	08 95       	ret

00000688 <__fp_powser>:
 688:	df 93       	push	r29
 68a:	cf 93       	push	r28
 68c:	1f 93       	push	r17
 68e:	0f 93       	push	r16
 690:	ff 92       	push	r15
 692:	ef 92       	push	r14
 694:	df 92       	push	r13
 696:	7b 01       	movw	r14, r22
 698:	8c 01       	movw	r16, r24
 69a:	68 94       	set
 69c:	05 c0       	rjmp	.+10     	; 0x6a8 <__fp_powser+0x20>
 69e:	da 2e       	mov	r13, r26
 6a0:	ef 01       	movw	r28, r30
 6a2:	1f df       	rcall	.-450    	; 0x4e2 <__mulsf3x>
 6a4:	fe 01       	movw	r30, r28
 6a6:	e8 94       	clt
 6a8:	a5 91       	lpm	r26, Z+
 6aa:	25 91       	lpm	r18, Z+
 6ac:	35 91       	lpm	r19, Z+
 6ae:	45 91       	lpm	r20, Z+
 6b0:	55 91       	lpm	r21, Z+
 6b2:	ae f3       	brts	.-22     	; 0x69e <__fp_powser+0x16>
 6b4:	ef 01       	movw	r28, r30
 6b6:	7e df       	rcall	.-260    	; 0x5b4 <__addsf3x>
 6b8:	fe 01       	movw	r30, r28
 6ba:	97 01       	movw	r18, r14
 6bc:	a8 01       	movw	r20, r16
 6be:	da 94       	dec	r13
 6c0:	79 f7       	brne	.-34     	; 0x6a0 <__fp_powser+0x18>
 6c2:	df 90       	pop	r13
 6c4:	ef 90       	pop	r14
 6c6:	ff 90       	pop	r15
 6c8:	0f 91       	pop	r16
 6ca:	1f 91       	pop	r17
 6cc:	cf 91       	pop	r28
 6ce:	df 91       	pop	r29
 6d0:	08 95       	ret

000006d2 <__fp_pscA>:
 6d2:	00 24       	eor	r0, r0
 6d4:	0a 94       	dec	r0
 6d6:	16 16       	cp	r1, r22
 6d8:	17 06       	cpc	r1, r23
 6da:	18 06       	cpc	r1, r24
 6dc:	09 06       	cpc	r0, r25
 6de:	08 95       	ret

000006e0 <__fp_pscB>:
 6e0:	00 24       	eor	r0, r0
 6e2:	0a 94       	dec	r0
 6e4:	12 16       	cp	r1, r18
 6e6:	13 06       	cpc	r1, r19
 6e8:	14 06       	cpc	r1, r20
 6ea:	05 06       	cpc	r0, r21
 6ec:	08 95       	ret

000006ee <__fp_round>:
 6ee:	09 2e       	mov	r0, r25
 6f0:	03 94       	inc	r0
 6f2:	00 0c       	add	r0, r0
 6f4:	11 f4       	brne	.+4      	; 0x6fa <__fp_round+0xc>
 6f6:	88 23       	and	r24, r24
 6f8:	52 f0       	brmi	.+20     	; 0x70e <__fp_round+0x20>
 6fa:	bb 0f       	add	r27, r27
 6fc:	40 f4       	brcc	.+16     	; 0x70e <__fp_round+0x20>
 6fe:	bf 2b       	or	r27, r31
 700:	11 f4       	brne	.+4      	; 0x706 <__fp_round+0x18>
 702:	60 ff       	sbrs	r22, 0
 704:	04 c0       	rjmp	.+8      	; 0x70e <__fp_round+0x20>
 706:	6f 5f       	subi	r22, 0xFF	; 255
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	8f 4f       	sbci	r24, 0xFF	; 255
 70c:	9f 4f       	sbci	r25, 0xFF	; 255
 70e:	08 95       	ret

00000710 <__divmodhi4>:
 710:	97 fb       	bst	r25, 7
 712:	07 2e       	mov	r0, r23
 714:	16 f4       	brtc	.+4      	; 0x71a <__divmodhi4+0xa>
 716:	00 94       	com	r0
 718:	06 d0       	rcall	.+12     	; 0x726 <__divmodhi4_neg1>
 71a:	77 fd       	sbrc	r23, 7
 71c:	08 d0       	rcall	.+16     	; 0x72e <__divmodhi4_neg2>
 71e:	0b d0       	rcall	.+22     	; 0x736 <__udivmodhi4>
 720:	07 fc       	sbrc	r0, 7
 722:	05 d0       	rcall	.+10     	; 0x72e <__divmodhi4_neg2>
 724:	3e f4       	brtc	.+14     	; 0x734 <__divmodhi4_exit>

00000726 <__divmodhi4_neg1>:
 726:	90 95       	com	r25
 728:	81 95       	neg	r24
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	08 95       	ret

0000072e <__divmodhi4_neg2>:
 72e:	70 95       	com	r23
 730:	61 95       	neg	r22
 732:	7f 4f       	sbci	r23, 0xFF	; 255

00000734 <__divmodhi4_exit>:
 734:	08 95       	ret

00000736 <__udivmodhi4>:
 736:	aa 1b       	sub	r26, r26
 738:	bb 1b       	sub	r27, r27
 73a:	51 e1       	ldi	r21, 0x11	; 17
 73c:	07 c0       	rjmp	.+14     	; 0x74c <__udivmodhi4_ep>

0000073e <__udivmodhi4_loop>:
 73e:	aa 1f       	adc	r26, r26
 740:	bb 1f       	adc	r27, r27
 742:	a6 17       	cp	r26, r22
 744:	b7 07       	cpc	r27, r23
 746:	10 f0       	brcs	.+4      	; 0x74c <__udivmodhi4_ep>
 748:	a6 1b       	sub	r26, r22
 74a:	b7 0b       	sbc	r27, r23

0000074c <__udivmodhi4_ep>:
 74c:	88 1f       	adc	r24, r24
 74e:	99 1f       	adc	r25, r25
 750:	5a 95       	dec	r21
 752:	a9 f7       	brne	.-22     	; 0x73e <__udivmodhi4_loop>
 754:	80 95       	com	r24
 756:	90 95       	com	r25
 758:	bc 01       	movw	r22, r24
 75a:	cd 01       	movw	r24, r26
 75c:	08 95       	ret

0000075e <_exit>:
 75e:	f8 94       	cli

00000760 <__stop_program>:
 760:	ff cf       	rjmp	.-2      	; 0x760 <__stop_program>
